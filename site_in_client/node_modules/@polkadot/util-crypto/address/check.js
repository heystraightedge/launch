"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = check;

var _decode = _interopRequireDefault(require("../base58/decode"));

var _checkChecksum = _interopRequireDefault(require("./checkChecksum"));

var _defaults = _interopRequireDefault(require("./defaults"));

// Copyright 2017-2020 @polkadot/util-crypto authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.

/**
 * @name checkAddress
 * @summary Validates an ss58 address.
 * @description
 * From the provided input, validate that the address is a valid input.
 */
function check(address, prefix) {
  let decoded;

  try {
    decoded = (0, _decode.default)(address);
  } catch (error) {
    return [false, error.message];
  }

  if (decoded[0] !== prefix) {
    return [false, `Prefix mismatch, expected ${prefix}, found ${decoded[0]}`];
  } else if (!_defaults.default.allowedEncodedLengths.includes(decoded.length)) {
    return [false, 'Invalid decoded address length'];
  }

  const [isValid] = (0, _checkChecksum.default)(decoded);
  return [isValid, isValid ? null : 'Invalid decoded address checksum'];
}