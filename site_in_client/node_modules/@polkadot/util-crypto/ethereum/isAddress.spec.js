"use strict";

var _ = require("./");

// Copyright 2017-2020 @polkadot/util-crypto authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
const ADDRESS = '0x00a329c0648769A73afAc7F9381E08FB43dBEA72';
describe('isEthereumAddress', () => {
  it('returns true when fully lowercase', () => {
    expect((0, _.isEthereumAddress)(ADDRESS.toLowerCase())).toBe(true);
  });
  it('returns true when fully uppercase', () => {
    expect((0, _.isEthereumAddress)(ADDRESS.toUpperCase().replace('0X', '0x'))).toBe(true);
  });
  it('returns true when checksummed', () => {
    expect((0, _.isEthereumAddress)(ADDRESS)).toBe(true);
  });
  it('returns false when empty address', () => {
    expect((0, _.isEthereumAddress)()).toBe(false);
  });
  it('returns false when invalid address', () => {
    expect((0, _.isEthereumAddress)('0xinvalid')).toBe(false);
  });
  it('returns false when invalid address of correct length', () => {
    expect((0, _.isEthereumAddress)('0xinvalid000123456789012345678901234567890')).toBe(false);
  });
});