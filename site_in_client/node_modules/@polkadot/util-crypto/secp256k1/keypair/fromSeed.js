"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = secp256k1KeypairFromSeed;

var _elliptic = _interopRequireDefault(require("elliptic"));

var _util = require("@polkadot/util");

// Copyright 2017-2020 @polkadot/util-crypto authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
const EC = _elliptic.default.ec;
const ec = new EC('secp256k1');
/**
 * @name secp256k1KeypairFromSeed
 * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 */

function secp256k1KeypairFromSeed(seed) {
  (0, _util.assert)(seed.length === 32, 'Expected valid 32-byte private key as a seed');
  const key = ec.keyFromPrivate(seed);
  return {
    publicKey: new Uint8Array(key.getPublic().encodeCompressed()),
    secretKey: (0, _util.bnToU8a)(key.getPrivate(), {
      bitLength: 256,
      isLe: false
    })
  };
}